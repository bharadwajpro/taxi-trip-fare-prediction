import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import { getPrediction, getRandomSample } from '../models/predict'
import Select from 'react-select'
import { zoneData, dayNumber, setTripMilesSeconds } from '../zones/zone'

export default function Home() {
  const [x, setX] = useState({
    "trip_miles": 0.0,
    "trip_time": 0,
    "request_hour": 0,
    "pickup_hour": 0,
    "dropoff_hour": 0,
    "PULocation": 0,
    "DOLocation": 0,
    "taxi_company": 0,
    "trip_day": 0,
  });
  const [y, setY] = useState(0.0);
  const [lgbm, setLgbm] = useState(0.0);
  const [dl, setDl] = useState(0.0);

  let options = [];
  for(let i = 0; i < zoneData.length; i++) {
    options.push({
      value: i + 1,
      label: zoneData[i]
    })
  }

  async function handleRandomSample() {
    const sample = await getRandomSample();
    setX(sample.X);
    setY(sample.y_actual);
  }

  useEffect(() => {
    setTripMilesSeconds(x, setX)
  }, [x.PULocation, x.DOLocation]);

  useEffect(() => {
    (async () => {
      const results = await getPrediction(x, y);

      setLgbm(results.lgbm);
      setDl(results.dl);
    })();
  }, [x])

  function pickupOptionSelected(pickupObj) {
    const hr = new Date().getHours();
    const day = new Date().getDay();
    const pickupId = pickupObj.value;
    setX({
      ...x,
      PULocation: pickupId,
      request_hour: hr,
      pickup_hour: hr,
      dropoff_hour: hr,
      trip_day: dayNumber[day]
    });
    setY(0.0);
  }

  function dropoffOptionSelected(dropoffObj) {
    const hr = new Date().getHours();
    const day = new Date().getDay();
    const dropoffId = dropoffObj.value;
    setX({
      ...x,
      DOLocation: dropoffId,
      request_hour: hr,
      pickup_hour: hr,
      dropoff_hour: hr,
      trip_day: dayNumber[day]
    });
    setY(0.0);
  }
  
  function taxiOptionSelected(taxiId) {
    const hr = new Date().getHours();
    const day = new Date().getDay();
    setX({
      ...x,
      taxi_company: taxiId.value,
      request_hour: hr,
      pickup_hour: hr,
      dropoff_hour: hr,
      trip_day: dayNumber[day]
    });
    setY(0.0);
  }

  return (
    <div>
      <Head>
        <title>New York City Taxi Trip Price Prediction</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1 className='text-center text-3xl font-black my-3'>
          New York City Taxi Trip Price Prediction
        </h1>

        <div className='p-3'>
          <div className='text-center text-xl my-3'>
            <div className='inline-block m-3 text-sky-600'>
              Choose Pickup and Dropoff locations
            </div>
            OR
            <button type="button" onClick={handleRandomSample} className='text-white bg-green-700 p-2 rounded-lg m-3'>
              Draw random sample &rarr;
            </button>
          </div>

          <div className='text-lg m-3 w-full'>
            Select Pickup location
            <Select className='mx-6 my-2 px-4' options={options} onChange={pickupOptionSelected} instanceId="pickup"/>
            Select Dropoff location
            <Select className='mx-6 my-2 px-4' options={options} onChange={dropoffOptionSelected} instanceId="dropoff"/>
            Select Taxi Company
            <Select className='mx-6 my-2 px-4' options={[
              {value: 0, label: 'Uber'},
              {value: 1, label: 'Lyft'}
            ]} onChange={taxiOptionSelected} instanceId="taxi"/>
          </div>
        </div>

        <div className='grid grid-cols-2 font-bold text-2xl text-center'>
          <table className='table-fixed mx-auto my-5'>
            <tbody>
              {
                Object.entries(x).map((elem) => {
                  return <tr key={elem[0]}>
                    <td>{elem[0]}</td>
                    <td>{elem[1]}</td>
                  </tr>
                })
              }
              <tr key="y_actual">
                <td>Actual Price</td>
                <td>{y}</td>
              </tr>
            </tbody>
          </table>

          <div className='grid grid-rows-2 text-emerald-700'>
            <div>
              <p>LightGBM model prediction</p>
              <p>{lgbm}</p>
            </div>

            <div>
              <p>Deep Learning model prediction</p>
              <p>{dl}</p>
            </div>
          </div>
        </div>

      </main>
    </div>
  )
}
