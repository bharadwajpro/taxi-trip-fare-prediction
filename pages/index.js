import React, { useState, useEffect } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { predictRandomSample } from '../models/predict'
import Select from 'react-select'
import {zoneData} from '../zones/zone'

export default function Home() {
  const [prediction, setPrediction] = useState({
    x: {
      "trip_miles": 0.0,
      "trip_time": 0,
      "request_hour": 0,
      "pickup_hour": 0,
      "dropoff_hour": 0,
      "PULocation": 0,
      "DOLocation": 0,
      "taxi_company": 0,
      "trip_day": 0,
    },
    y_actual: 0.0,
    lgbm: 0.0,
    dl: 0.0
  });

  let options = [];
  for(let i = 0; i < zoneData.length; i++) {
    options.push({
      value: i + 1,
      label: zoneData[i]
    })
  }

  async function handleRandomSample() {
    const results = await predictRandomSample();
    const {
      x,
      y_actual,
      lgbm: {
        variable: {
          data: [lgbm_value = 0.0] = []
        } = {}
      },
      dl: {
        output: {
          data: [dl_value = 0.0] = []
        } = {}
      }
    } = results;
    setPrediction({
      x,
      y_actual,
      lgbm: Number(lgbm_value.toFixed(2)),
      dl: Number(dl_value.toFixed(2))
    });
  }

  function renderTripParameters(data) {
    return Object.entries(data).map((elem) => {
      return <li key={elem[0]}>
        {elem[0] + ': ' + elem[1]}
      </li>
    })
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>New York City Taxi Trip Price Prediction</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          New York City Taxi Trip Price Prediction
        </h1>

        <p className={styles.description}>
          Choose Pickup and Dropoff locations
        </p>

        <Select options={options}/>

        <ul className={styles.description}>
          {
            Object.entries(prediction.x).map((elem) => {
              return <li key={elem[0]}>
                {elem[0] + ': ' + elem[1]}
              </li>
            })
          }
          <li>Actual Price: {prediction.y_actual}</li>
        </ul>

        <div className={styles.grid}>
          <a href="#" onClick={handleRandomSample} className={styles.card}>
            <h2>Draw random sample &rarr;</h2>
            <p>Predict a random trip data</p>
          </a>

          <a href="#" className={styles.card}>
            <h2>LightGBM</h2>
            <p>{prediction.lgbm}</p>
          </a>

          <a href="#" className={styles.card}>
            <h2>Deep Learning</h2>
            <p>{prediction.dl}</p>
          </a>
        </div>
      </main>
    </div>
  )
}
